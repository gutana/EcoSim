Market :
    commodities 
    consumer requests
    
    maybe just market values like GDP etc

Commodity :
    key ? maybe
    producer
    price 
    supply
    
Consumer Requests :
    key ? maybe
    consumer
    price
    quant to buy
    
Entity : 
    
    ** new thinking ** each cycle, a new price can be generated to be spend on a commodity 
        (ie: one cycle, an entity might be interested in purchasing 1 very expensive commodity, 
        whereas another cycle they might be interested in purchasing multiple cheaper commodities) 
        this can emulate a fluctation in interests when purchasing commodities each cycle
        this can also help take on the load of commodity generation
         - instead of pushing a request for commodity or service into the market, a generic request is pushed as a price and when the sale is
            handled,  a search is then made comparing the price to spend on a commodity versus the prices of commodities in the market. the commodity
            with the closest cost to the 'asking price', and the sale is handled
         - this was thought of because the idea of keeping track of multiple commodities and services to be generated and dealth with is daunting and
            unnecessary. we are only interested in an abstraction of this, rather than the sales of individual commodities or services
            ie: how much money is being spent and how much money is being made through sales
        ** we may also want to generate a requested amount (randomized) and calculate how many we can buy this cycle with what we have
            ie: savings = 200; commodity price = 75; requested amount = 3; unattainable, will only purchase two and will be dealt with in buy()
            OR  savings = 300; commodity price = 23; requested amount = 4; attainable, amount and spending will be sent to buy()

    entity type = consumer : producer : government

    if consumer :
        if entity wants to buy (we need to somehow handle decisions based on savings and interest in buying)
            available funds = get how much money is available to purchase (optional branch can be made for productive purchase vs non productive)
            limit = available funds / commodity's price
            buy(price to spend, limit)

    else if producer :
        if entity has goods to sell (somehow determine supply and ? maybe demand)
            limit = supply // this may change, unsure of how i want to handle determination of limit
            sell(commodity, limit)

    else if government :
        certain government investments will be involved here
        as well as government purchasing/borrowing

    
buy(price to spend, limit) :
    commodity = search market for the commodity with the closest price to the price to spend
    ideal quantity = determing purchase quant(commodity)
    quant to buy = min(ideal, limit)
    market.push consumer request (commodity, self, quant to buy)

sell(commodity, limit) :
    market.push a commodity with the limit the consumer wants to sell (might be a revenue requirement or something, still unsure)

determine sell quant(commodity) :
    mean = historical mean price of commodity
    favorability = position of mean within observed trading range // i believe this is how far the mean is from min and max of sale history
    amount to sell = favorability * excess inventory of commodity
    return amount to sell
    
determine purchase quant(consumer request) :
    mean = historical mean price of commodity
    favorability = max price - position of mean withing observed trading range 
    amount to buy = favorability * consumer request.quant to buy
    return amount to buy

